sudo apt-get update
sudo apt-get install qpdf



# Exercise 5: Compressing

# 2. Create a directory "compress", go into this directory
mkdir compress
cd compress

# 3. Create a first file "hello" whose content is "Hello"
echo "Hello" > hello

# 4. Compute the deflate compression (level 1) of this file. Store the compressed file size into a file log_compress
zlib-flate -compress < hello > hello_compressed
echo "$(wc -c < hello_compressed) hello" > log_compress

# 5. Create a second file "hello_multiple" whose content is 1000 lines of "Hello"
yes "Hello" | head -n 1000 > hello_multiple

# 6. Compute the deflate compression (level 1) of this file. Store the compressed file size into a file log_compress
zlib-flate -compress < hello_multiple > hello_multiple_compressed
echo "$(wc -c < hello_multiple_compressed) hello_multiple" >> log_compress

# 7. Create a third file "hello_mulitple_i" whose content is 1000 lines of "Hello i" (i varying from 1 to 100)
for i in {1..1000}; do
    echo "Hello $i" >> hello_multiple_i
done

# 8. Compute the deflate compression (level 1) of this third file. Store the compressed file size into log_compress
zlib-flate -compress < hello_multiple_i > hello_multiple_i_compressed
echo "$(wc -c < hello_multiple_i_compressed) hello_multiple_i" >> log_compress

# 9. Display the content of log_compress
cat log_compress

# 10. Compute the compression ratio of each file, also display it as a simple fraction (e.g. 12.6 => 10 :1)
while read -r size filename; do
    original_size=$(wc -c < "$filename")
    compression_ratio=$(echo "scale=1; $original_size / $size" | bc)
    echo "$filename: $compression_ratio : 1"
done < log_compress

# 11. Analyse the results
echo "Analyse the compression ratios printed above to understand the efficiency of the deflate algorithm for different types of content."

